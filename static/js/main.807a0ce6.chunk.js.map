{"version":3,"sources":["components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/App.jsx","index.js"],"names":["ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","onAdd","props","onCheckUnique","id","uuidv4","reset","className","onSubmit","this","htmlFor","type","placeholder","onChange","required","pattern","Component","ContactList","contacts","onDelete","length","map","contact","Contact","handleDelete","contactId","target","parentNode","console","log","onClick","Filter","filter","onSearch","contactsListToShow","App","addContact","newContact","deleteContact","prevState","filterContact","getContactsListToShow","toUpperCase","includes","checkUnique","find","alert","defaultProps","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.807a0ce6.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './ContactForm.css';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n\r\nclass ContactForm extends Component {\r\n   state = {\r\n        name: '',\r\n        number: '',\r\n    };\r\n\r\n\r\n    handleChange = e => {\r\n        const { name, value} = e.currentTarget;\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const { name, number} = this.state;\r\n        const { onAdd } = this.props;\r\n        const { onCheckUnique } = this.props;\r\n  \r\n        if (!onCheckUnique(this.state.name)) return\r\n        const id = uuidv4();\r\n        this.setState({id: id});\r\n\r\n        onAdd({ id, name, number });\r\n\r\n        this.reset();\r\n  };\r\n    \r\n    \r\n    reset = () => {\r\n    this.setState({ id: '', name: '', number: '' });\r\n  };\r\n\r\n    render() {\r\n        return (\r\n        <form className=\"form-contact\" onSubmit={this.handleSubmit}>\r\n            <div>\r\n                <label htmlFor=\"name\" className=\"label-contact\">Name</label>\r\n                <input type=\"text\" className=\"input-contact\" name=\"name\" value={this.state.name} placeholder=\"Enter name\" onChange={this.handleChange} required></input>\r\n                \r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"phone\" className=\"label-contact\">Phone</label>\r\n                <input type=\"tel\" className=\"input-contact\" name=\"number\" value={this.state.number} placeholder=\"Enter phone XXX-XX-XX\" pattern=\"^(\\d{3})-\\d{2}-\\d{2}$\" onChange={this.handleChange} required></input>\r\n            </div>\r\n            <button type=\"submit\" className=\"btn-add\" onSubmit={this.handleSubmit}>Add contact</button>\r\n        </form>\r\n    )\r\n    }\r\n}\r\n\r\nexport default ContactForm;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport shortid from 'shortid';\r\n\r\nimport './ContactList.css';\r\n\r\nclass ContactList extends Component {       \r\n    render() {\r\n        const { contacts } = this.props;\r\n        const { onDelete } = this.props;\r\n        if (contacts.length === 0) { return <div>Nothing found</div>} else\r\n        {\r\n    return (\r\n        <ul className='contact-list' >\r\n            {contacts.map((contact) => (\r\n                <Contact key={contact.id} id={contact.id} name={contact.name} number={contact.number} onDelete={onDelete} />\r\n            ))}\r\n        </ul>\r\n    );\r\n}\r\n    };\r\n}\r\n\r\nclass Contact extends Component {\r\n    handleDelete = e => {\r\n        const { onDelete } = this.props;\r\n        const contactId = e.target.parentNode.id;\r\n        console.log(e.target.parentNode.id);\r\n        onDelete(contactId);\r\n    };\r\n\r\n    render() {\r\n       const { id, name, number } = this.props;\r\n        return (\r\n            <li className='contact-item' id={id}> {name} : {number}\r\n            <button type=\"button\" className=\"btn-delete\" onClick={this.handleDelete}>Delete</button>\r\n            </li>\r\n        );\r\n    }\r\n};\r\n\r\nexport default ContactList;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Filter.css';\r\nimport ContactList from '../ContactList';\r\n\r\nclass Filter extends Component {\r\n    state = {\r\n        filter: '',\r\n    }\r\n    \r\n    handleChange = e => {\r\n        const { onSearch, contactsListToShow } = this.props;\r\n        const { filter } = this.state;\r\n        const { name, value } = e.currentTarget;\r\n\r\n        this.setState({ [name]: value });\r\n\r\n        onSearch(filter);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"form-search\">\r\n                <label htmlFor=\"filter\" className=\"label-search\">Find contacts by name</label>\r\n                <input type=\"text\" name=\"filter\" className=\"input-search\"  placeholder=\"Enter the name\" onChange={this.handleChange}></input>\r\n            </form>\r\n        )\r\n    }\r\n}\r\nexport default Filter;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ContactForm from '../components/ContactForm';\r\nimport Filter from './Filter';\r\nimport ContactList from '../components/ContactList';\r\n\r\nimport './App.css';\r\n\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n    {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\r\n    {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\r\n    {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\r\n    {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\r\n    ],\r\n    filter: '',\r\n }\r\n\r\n  static defaultProps = {};\r\n  static propTypes = {};\r\n\r\n  addContact = (newContact) => {\r\n    this.setState(({ contacts }) =>\r\n      ({ contacts: [newContact, ...contacts], })\r\n    );\r\n  }\r\n\r\n  deleteContact = (contactId) => {\r\n     this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\r\n    }));\r\n  }\r\n\r\n  filterContact = (filter) => { \r\n    this.setState({ filter });\r\n  };\r\n\r\n  getContactsListToShow = () => {\r\n    const { contacts, filter } = this.state;\r\n    if (filter === \"\") { return contacts }\r\n    else { return contacts.filter(contact => contact.name.toUpperCase().includes(filter.toUpperCase())); } \r\n  }\r\n\r\n  checkUnique = (name) => { \r\n    console.log('check unique');\r\n    const { contacts } = this.state;\r\n    if (contacts.find(contact => contact.name.toUpperCase() === name.toUpperCase())) {\r\n      alert(`${name} is already in contacts!`)\r\n    } else { return true };\r\n  };\r\n\r\n  render() {\r\n    const contactsListToShow = this.getContactsListToShow();\r\n    return (\r\n      <div className=\"app\">\r\n        <h1>Phonebook</h1>\r\n        <ContactForm onAdd={this.addContact} onCheckUnique={ this.checkUnique}/>\r\n        <h2>Contacts</h2>\r\n        <Filter filter={this.state.filter} onSearch={this.filterContact} contactsListToShow={contactsListToShow}/>\r\n        <ContactList contacts={contactsListToShow} onDelete={this.deleteContact}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n \r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/App';\r\n\r\nimport 'modern-normalize';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}